[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "dabox"
version = "0.0.0"
description = "3D visualization + Python"
readme = "README.md"
license = { text="MIT" }
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent"
]
dependencies = [
    "onnxruntime",
    "opencv-python",
    "rich",
    "torch",
    "torchvision",
    "tyro",
    "ultralytics",
    "universal-pathlib",
    "viser",
]

[project.optional-dependencies]
dev = [
    "mypy",
    "pre-commit",
    "pyright",
    "pytest",
    "ruff",
]

[project.urls]
"GitHub" = "https://github.com/jefequien/DaBox"

[tool.setuptools.packages.find]
include = ["dabox*"]

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
warn_unused_configs = true
disable_error_code="var-annotated"  # Common source of mypy + numpy false positives.

[tool.pyright]
include = ["dabox"]
exclude = [
    "**/__pycache__",
]
defineConstant = { DEBUG = true }
reportMissingImports = false
reportMissingTypeStubs = false
reportPrivateImportUsage = false
pythonVersion = "3.10"
pythonPlatform = "Linux"

[tool.ruff]
select = [
    "E",  # pycodestyle errors.
    "F",  # Pyflakes rules.
    "PLC",  # Pylint convention warnings.
    "PLE",  # Pylint errors.
    "PLR",  # Pylint refactor recommendations.
    "PLW",  # Pylint warnings.
    "I", # Import sorting.
]
ignore = [
    "E741", # Ambiguous variable name. (l, O, or I)
    "E501",  # Line too long.
    "E721",  # Do not compare types, use `isinstance()`.
    "F722",  # Forward annotation false positive from jaxtyping. Should be caught by pyright.
    "F821",  # Forward annotation false positive from jaxtyping. Should be caught by pyright.
    "PLR2004",  # Magic value used in comparison.
    "PLR0915",  # Too many statements.
    "PLR0913",  # Too many arguments.
    "PLC0414",  # Import alias does not rename variable. (this is used for exporting names)
    "PLC1901",  # Use falsey strings.
    "PLR5501",  # Use `elif` instead of `else if`.
    "PLR0911",  # Too many return statements.
    "PLR0912",  # Too many branches.
    "PLW0603",  # Globa statement updates are discouraged.
    "PLW2901",  # For loop variable overwritten.
]
